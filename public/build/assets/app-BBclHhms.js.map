{"version":3,"mappings":";iGAEA,MAAeA,EAAA,CACX,SAAU,CACN,iBAAkB,CACd,OAAO,eACV,EAED,OAAQ,CACJ,OAAO,KAAK,QAAQ,kBAAkB,CACzC,EAED,kBAAmB,CACf,MAAO,CAAC,CAAE,MAAO,KAAM,KAAM,KAAK,EAAI,GAAG,KAAK,aAAa,KAAK,WAAW,UAAU,CAAC,CACzF,EAED,kBAAmB,CACf,MAAO,CAAC,CAAE,MAAO,KAAM,KAAM,YAAY,EAAI,GAAG,KAAK,aAAa,KAAK,WAAW,UAAU,CAAC,CAChG,CACJ,EAED,QAAS,CACL,WAAWC,EAAWC,EAAS,sBAAuB,CAClD,OAAOC,EAAOF,CAAS,EAAE,OAAOC,CAAM,CACzC,EAED,aAAaE,EAAQC,EAAW,KAAM,CAClC,OAAAA,MAAa,CAAC,CAACC,EAAKC,CAAK,KAAO,CAAE,MAAOD,EAAK,KAAMC,KAE7C,OAAO,QAAQH,CAAM,EAAE,IAAIC,CAAQ,CAC7C,EAED,WAAWG,EAAKC,EAAS,CACrB,OAAO,YAAYD,EAAMA,GAAO,EAAI,KAAK,WAAW,SAASC,CAAO,IAAI,QAAQ,CAAC,CAAC,CACrF,EAED,QAAQC,EAAK,CACT,GAAI,CAACA,GAAO,OAAOA,GAAQ,SACvB,OAAOA,EAEX,UAAWJ,KAAOI,EACdA,EAAIJ,CAAG,EAAI,KAAK,QAAQI,EAAIJ,CAAG,CAAC,EAChCI,EAAIJ,CAAG,IAAMI,EAAIJ,CAAG,EAAI,MAE5B,cAAO,OAAOI,CAAG,EAAE,MAAOC,GAASA,IAAS,IAAI,IAAMD,EAAM,MACrDA,CACV,EAED,iBAAkB,CACd,KAAK,MAAM,IAAI,gBAAgB,SAAW,oBAAoB,EAAE,KAAME,GAAa,CAC/E,KAAK,YAAcA,EAAS,IAC5C,CAAa,CACJ,EAED,aAAc,CACV,KAAK,MAAM,OAAS,CAChB,GAAI,KACJ,YAAa,KACb,YAAa,KACb,aAAc,KACd,WAAY,KACZ,WAAY,KACZ,UAAW,KACX,UAAW,KACX,UAAW,KACX,MAAO,KACP,MAAO,KACP,MAAO,KACP,GAAI,KACJ,EAAG,KACH,GAAI,IACP,CACJ,CACJ,EAED,aAAc,CACV,KAAK,YAAa,EAClB,KAAK,MAAQ,MAAM,IAAI,CACnB,KAAK,MACL,KAAK,MAAM,eAAe,wBAAwB,GAAK,IAAI,EAC3D,GAAG,MAAM,OAAO,SAAS,OAAO,QAAQ,MAAO,EAAE,CAAC,CAC9D,CAAS,CACJ,EAED,MAAO,CACH,MAAO,CACH,QAAS,SAAUC,EAAO,CACtB,eAAe,wBAAwB,EAAI,KAAK,UAAUA,CAAK,CAClE,EACD,KAAM,EACT,CACJ,EAED,MAAO,CACH,MAAO,CACH,MAAO,CACH,WAAY,GACZ,iBAAkB,GAClB,OAAQ,CAAE,EACV,KAAM,CACF,GAAI,KACJ,KAAM,EACT,CACJ,EACD,YAAa,CAAE,EACf,WAAY,CACR,WAAY,CACR,KAAM,SACN,YAAa,kBACb,IAAK,SACL,WAAY,iBACf,EAED,OAAQ,CAAC,qBAAsB,kBAAmB,UAAU,EAE5D,WAAY,CACR,kBAAmB,6BACnB,qBAAsB,gCACtB,aAAc,kBACd,gBAAiB,qBACjB,SAAU,aACV,iBAAkB,cAClB,QAAS,OACZ,EAED,WAAY,CACR,IAAK,gCACL,WAAY,8CACZ,mBAAoB,4DACpB,KAAM,kCACN,IAAK,oCACL,OAAQ,mCACX,EAED,eAAgB,CACZ,gBAAiB,kBACjB,WAAY,aACZ,QAAS,QACT,aAAc,gBACd,gBAAiB,4BACjB,OAAQ,oBACR,eAAgB,gBACnB,EAED,eAAgB,CACZ,UAAW,QACX,OAAQ,oBACR,IAAK,SACL,QAAS,SACT,aAAc,uBACd,eAAgB,wBAChB,QAAS,mBACT,cAAe,kBACf,sBAAuB,2DACvB,QAAS,SACT,iBAAkB,2BAClB,MAAO,mCACP,UAAW,4BACX,QAAS,uBACT,eAAgB,sBAChB,qBAAsB,0BACtB,kBAAmB,mBACnB,UAAW,gBACX,WAAY,iBACZ,QAAS,QACT,QAAS,SACT,qBAAsB,mBACtB,kBAAmB,gBACnB,qBAAsB,mBACtB,kBAAmB,gBACnB,iBAAkB,gBAClB,eAAgB,eACnB,EAED,SAAU,CACN,KAAM,MACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,MAAO,MACP,MAAO,MACP,MAAO,MACP,OAAQ,QACR,OAAQ,QACR,OAAQ,SACR,OAAQ,SACR,OAAQ,QACX,EAED,SAAU,CACN,KAAM,EACN,KAAM,EACN,KAAM,IACN,KAAM,IACN,MAAO,GACP,MAAO,IACP,MAAO,GACP,OAAQ,EAAI,IACZ,OAAQ,EAAI,IACZ,OAAQ,GAAK,IACb,OAAQ,GAAK,IACb,OAAQ,GAAK,GAChB,CACJ,CACJ,CACJ,CACL,mgCC9MeC,EAAA,CACX,CAAE,KAAM,IAAK,SAAU,WAAa,EAEpC,CACI,KAAM,YACN,KAAM,WACN,UAAW,IAAKC,EAAA,IAAC,OAAO,wBAAwB,2BACnD,EAED,CACI,KAAM,eACN,KAAM,cACN,UAAW,IAAKA,EAAA,IAAC,OAAO,uBAAuB,6BAClD,EAED,CACI,KAAM,oBACN,KAAM,4BACN,UAAW,IAAKA,EAAA,IAAC,OAAO,uBAAuB,6BAClD,EAED,CACI,KAAM,eACN,KAAM,UACN,UAAW,IAAKA,EAAA,IAAC,OAAO,uBAAuB,6BAClD,CACL,ECbAC,EAAI,IAAIC,CAAY,EACpBD,EAAI,IAAIE,CAAU,EAClBF,EAAI,IAAIG,CAAS,EAEjBH,EAAI,UAAU,MAAQ,OAAO,MAAM,OAAM,EACzCI,QAAM,MAAQ,OAAO,MAErB,OAAO,MAAQC,EACf,OAAO,GAAKC,EAEZ,OAAO,gBAAgB,SAAW,IAAM,OAAO,gBAAgB,KAE/D,IAAIC,EAAiB,OAAO,gBAAgB,SAAW,KAEnD,OAAO,gBAAgB,OAAS,IAAM,OAAO,gBAAgB,OAAS,OACtEA,EAAiB,IACjB,OAAO,gBAAgB,SAAW,IAGtC,MAAMC,EAAS,IAAIL,EAAU,CACzB,OAAQL,EACR,KAAM,UACN,KAAMS,EACN,WAAWV,EAAO,CACd,OAAO,OAAO,GAAG,MAAMA,CAAK,CAC/B,EACD,eAAeA,EAAO,CAClB,IAAIY,EAAS,OAAO,GAAG,UAAUZ,EAAO,CAAE,OAAQ,EAAK,CAAE,EACzD,OAAOY,EAAS,IAAMA,EAAS,EAClC,CACL,CAAC,EAEDT,EAAI,UAAU,aAAcU,CAAoB,EAEhDV,EAAI,MAAMhB,CAAI,EAEd,IAAIgB,EAAI,CAAE,GAAI,oBAAqB,OAAAQ,CAAM,CAAE","names":["Base","timestamp","format","moment","object","callback","key","value","sum","vatType","obj","prop","response","query","Routes","__vitePreload","Vue","BootstrapVue","VueDeepSet","VueRouter","Model","merge","qs","routerBasePath","router","result","LaravelVuePagination"],"ignoreList":[],"sources":["../../../resources/js/base.js","../../../resources/js/routes.js","../../../resources/js/app.js"],"sourcesContent":["import moment from \"moment\";\n\nexport default {\n    computed: {\n        FiscalRegistrar() {\n            return FiscalRegistrar;\n        },\n\n        $echo() {\n            return Echo.channel(\"fiscal-registrar\");\n        },\n\n        agentTypeOptions() {\n            return [{ value: null, text: \"нет\" }, ...this.buildOptions(this.dictionary.agentTypes)];\n        },\n\n        taxSystemOptions() {\n            return [{ value: null, text: \"не выбрано\" }, ...this.buildOptions(this.dictionary.taxSystems)];\n        },\n    },\n\n    methods: {\n        formatTime(timestamp, format = \"DD.MM.YYYY HH:mm:ss\") {\n            return moment(timestamp).format(format);\n        },\n\n        buildOptions(object, callback = null) {\n            callback ??= ([key, value]) => ({ value: key, text: value });\n\n            return Object.entries(object).map(callback);\n        },\n\n        extractVat(sum, vatType) {\n            return parseFloat((sum - sum / (1 + this.dictionary.vatRates[vatType])).toFixed(2));\n        },\n\n        emptify(obj) {\n            if (!obj || typeof obj !== \"object\") {\n                return obj;\n            }\n            for (const key in obj) {\n                obj[key] = this.emptify(obj[key]);\n                obj[key] || (obj[key] = null);\n            }\n            Object.values(obj).every((prop) => prop === null) && (obj = null);\n            return obj;\n        },\n\n        enumConnections() {\n            this.$http.get(FiscalRegistrar.basePath + \"/api/v1/connection\").then((response) => {\n                this.connections = response.data;\n            });\n        },\n\n        resetFilter() {\n            this.query.filter = {\n                id: null,\n                external_id: null,\n                internal_id: null,\n                created_from: null,\n                created_to: null,\n                connection: null,\n                operation: null,\n                min_total: null,\n                max_total: null,\n                state: null,\n                email: null,\n                phone: null,\n                fn: null,\n                i: null,\n                fd: null,\n            };\n        },\n    },\n\n    beforeMount() {\n        this.resetFilter();\n        this.query = merge.all([\n            this.query,\n            JSON.parse(sessionStorage[\"fiscal-registrar.query\"] || \"{}\"),\n            qs.parse(window.location.search.replace(/^\\?/, \"\")),\n        ]);\n    },\n\n    watch: {\n        query: {\n            handler: function (query) {\n                sessionStorage[\"fiscal-registrar.query\"] = JSON.stringify(query);\n            },\n            deep: true,\n        },\n    },\n\n    data() {\n        return {\n            query: {\n                hideFilter: false,\n                hideCreateButton: false,\n                filter: {},\n                sort: {\n                    by: \"id\",\n                    desc: false,\n                },\n            },\n            connections: {},\n            dictionary: {\n                operations: {\n                    sell: \"приход\",\n                    sell_refund: \"возврат прихода\",\n                    buy: \"расход\",\n                    buy_refund: \"возврат расхода\",\n                },\n\n                states: [\"не зарегистрирован\", \"зарегистрирован\", \"проведен\"],\n\n                agentTypes: {\n                    bank_paying_agent: \"банковский платежный агент\",\n                    bank_paying_subagent: \"банковский платежный субагент\",\n                    paying_agent: \"платежный агент\",\n                    paying_subagent: \"платежный субагент\",\n                    attorney: \"поверенный\",\n                    commission_agent: \"комиссионер\",\n                    another: \"агент\",\n                },\n\n                taxSystems: {\n                    osn: \"общая система налогообложения\",\n                    usn_income: \"упрощенная система налогообложения (доходы)\",\n                    usn_income_outcome: \"упрощенная система налогообложения (доходы минус расходы)\",\n                    envd: \"единый налог на вмененный доход\",\n                    esn: \"единый сельскохозяйственный налог\",\n                    patent: \"патентная система налогообложения\",\n                },\n\n                paymentMethods: {\n                    full_prepayment: \"предоплата 100%\",\n                    prepayment: \"предоплата\",\n                    advance: \"аванс\",\n                    full_payment: \"полный расчет\",\n                    partial_payment: \"частичный расчет и кредит\",\n                    credit: \"передача в кредит\",\n                    credit_payment: \"оплата кредита\",\n                },\n\n                paymentObjects: {\n                    commodity: \"товар\",\n                    excise: \"подакцизный товар\",\n                    job: \"работа\",\n                    service: \"услуга\",\n                    gambling_bet: \"ставка азартной игры\",\n                    gambling_prize: \"выигрыш азартной игры\",\n                    lottery: \"лотерейный билет\",\n                    lottery_prize: \"выигрыш лотереи\",\n                    intellectual_activity: \"предоставление результатов интеллектуальной деятельности\",\n                    payment: \"платеж\",\n                    agent_commission: \"агентское вознаграждение\",\n                    award: \"взнос/штраф/вознаграждение/бонус\",\n                    composite: \"составной предмет расчета\",\n                    another: \"иной предмет расчета\",\n                    property_right: \"имущественное право\",\n                    \"non-operating_gain\": \"внереализационный доход\",\n                    insurance_premium: \"страховые взносы\",\n                    sales_tax: \"торговый сбор\",\n                    resort_fee: \"курортный сбор\",\n                    deposit: \"залог\",\n                    expense: \"расход\",\n                    pension_insurance_ip: \"взносы на ОПС ИП\",\n                    pension_insurance: \"взносы на ОПС\",\n                    medical_insurance_ip: \"взносы на ОМС ИП\",\n                    medical_insurance: \"взносы на ОМС\",\n                    social_insurance: \"взносы на ОСС\",\n                    casino_payment: \"платеж казино\",\n                },\n\n                vatTypes: {\n                    none: \"нет\",\n                    vat0: \"0%\",\n                    vat5: \"5%\",\n                    vat7: \"7%\",\n                    vat10: \"10%\",\n                    vat18: \"18%\",\n                    vat20: \"20%\",\n                    vat105: \"5/105\",\n                    vat107: \"7/107\",\n                    vat110: \"10/110\",\n                    vat118: \"18/118\",\n                    vat120: \"20/120\",\n                },\n\n                vatRates: {\n                    none: 0,\n                    vat0: 0,\n                    vat5: 0.05,\n                    vat7: 0.07,\n                    vat10: 0.1,\n                    vat18: 0.18,\n                    vat20: 0.2,\n                    vat105: 5 / 105,\n                    vat107: 7 / 107,\n                    vat110: 10 / 110,\n                    vat118: 18 / 118,\n                    vat120: 20 / 120,\n                },\n            },\n        };\n    },\n};\n","export default [\r\n    { path: \"/\", redirect: \"/receipts\" },\r\n\r\n    {\r\n        path: \"/receipts\",\r\n        name: \"receipts\",\r\n        component: () => import(\"./screens/receipts.vue\"),\r\n    },\r\n\r\n    {\r\n        path: \"/receipt/new\",\r\n        name: \"new-receipt\",\r\n        component: () => import(\"./screens/receipt.vue\"),\r\n    },\r\n\r\n    {\r\n        path: \"/receipt/from/:id\",\r\n        name: \"new-receipt-from-existing\",\r\n        component: () => import(\"./screens/receipt.vue\"),\r\n    },\r\n\r\n    {\r\n        path: \"/receipt/:id\",\r\n        name: \"receipt\",\r\n        component: () => import(\"./screens/receipt.vue\"),\r\n    },\r\n];\r\n","import Vue from \"vue\";\r\nimport BootstrapVue from \"bootstrap-vue\";\r\nimport * as VueDeepSet from \"vue-deepset\";\r\nimport merge from \"deepmerge\";\r\nimport qs from \"qs\";\r\nimport Base from \"./base\";\r\nimport { Model } from \"vue-api-query\";\r\nimport Routes from \"./routes\";\r\nimport VueRouter from \"vue-router\";\r\nimport LaravelVuePagination from \"laravel-vue-pagination\";\r\nimport \"bootstrap\";\r\nimport \"../sass/app.scss\";\r\n\r\nVue.use(BootstrapVue);\r\nVue.use(VueDeepSet);\r\nVue.use(VueRouter);\r\n\r\nVue.prototype.$http = window.axios.create();\r\nModel.$http = window.axios;\r\n\r\nwindow.merge = merge;\r\nwindow.qs = qs;\r\n\r\nwindow.FiscalRegistrar.basePath = \"/\" + window.FiscalRegistrar.path;\r\n\r\nlet routerBasePath = window.FiscalRegistrar.basePath + \"/\";\r\n\r\nif (window.FiscalRegistrar.path === \"\" || window.FiscalRegistrar.path === \"/\") {\r\n    routerBasePath = \"/\";\r\n    window.FiscalRegistrar.basePath = \"\";\r\n}\r\n\r\nconst router = new VueRouter({\r\n    routes: Routes,\r\n    mode: \"history\",\r\n    base: routerBasePath,\r\n    parseQuery(query) {\r\n        return window.qs.parse(query);\r\n    },\r\n    stringifyQuery(query) {\r\n        let result = window.qs.stringify(query, { encode: false });\r\n        return result ? \"?\" + result : \"\";\r\n    },\r\n});\r\n\r\nVue.component(\"pagination\", LaravelVuePagination);\r\n\r\nVue.mixin(Base);\r\n\r\nnew Vue({ el: \"#fiscal-registrar\", router });\r\n"],"file":"assets/app-BBclHhms.js"}